- hosts: bastion
  vars:
    internet_type:  "{{ lookup('env','GI_INTERNET_ACCESS') }}"
    domain:  "{{ lookup('env','GI_DOMAIN') }}"
    ics_version_hint:  "{{ lookup('env','ICS_VERSION') }}"
    ics_size:  "{{ lookup('env','ICS_SIZE') }}"
  

  tasks:
  - name: Check other configuration parameters
    fail: msg="Variable {{ item.name }} is not set"
    when: item.value == ""
    loop:
      - { name: "GI_INTERNET_ACCESS", value: "{{ internet_type }}" }
      - { name: "GI_DOMAIN", value: "{{ domain }}" }
      - { name: "ICS_VERSION", value: "{{ ics_version_hint }}" }
      - { name: "ICS_SIZE", value: "{{ ics_size }}" }

  - name: Set parameters for air-gapped installation
    set_fact:
      repo_user:  "{{ lookup('env','GI_REPO_USER') }}"
      repo_user_password:  "{{ lookup('env','GI_REPO_USER_PWD') }}"
    when: internet_type == 'A'

  - name: Check configuration parameters for air-gapped installation
    fail: msg="Variable {{ item.name }} is not set"
    when: item.value == "" and is_air_gapped == 'Y'
    loop:
      - { name: "GI_REPO_USER", value: "{{ repo_user }}" }
      - { name: "GI_REPO_USER_PWD", value: "{{ repo_user_password }}" }

  - name: Set ICS installation variables
    set_fact:
      ics_operator_namespace: "common-service"
      ics_case_name: "ibm-cp-common-services"
      ics_case_inventory_setup: "ibmCommonServiceOperatorSetup"
      ics_version: [ "3.5.6","3.6.2","3.6.3","3.7.1" ].ics_version_hint

  - name: Create ICS operator namespace
    shell:
      cmd: "oc create namespace {{ ics_operator_namespace }}"
    ignore_errors: yes

  - name: Check presence of cloudctl tool
      stat:
        path: "../gi-temp/{{ item.file }}"
      register: cloudctl_tool
      with_items:
        - { file: "cloudctl-linux-amd64.tar.gz" }
      ignore_errors: true

  - name: Stop if cloudct tool is not uploaded for air-gapped installation
    fail:
      msg: "Please upload cloud tool to download directory"
    with_items: "{{ cloud_tool.results }}"
    when: item.stat.exists == False and internet_type == 'A'

  - name: "Download cloud tool"
    get_url:
      url: "https://github.com/IBM/cloud-pak-cli/releases/latest/download/cloudctl-linux-amd64.tar.gz/{{ item.item.file }}"
      dest: "../gi-temp"
      use_proxy: "{{ 'yes' if internet_type == 'P' else 'no' }}"
      with_items: "{{ cloud_tool.results }}"
    when: item.stat.exists == False and internet_type != 'A'

  - name: Unpack cloudctl tools
    shell:
      cmd: tar xf ../gi-temp/{{ item.src }} -C /usr/local/bin
      warn: no
    with_items:
      - { src: "cloudctl-linux-amd64.tar.gz" }

  - name: Standarize cloudctl name
    command: mv /usr/local/bin/cloudctl-linux-amd64 /usr/local/bin/cloudctl

  - name: Set correct rights for RHCOS tools in /usr/local/bin
    file:
      path: "/usr/local/bin/{{ item.file }}"
      owner: root
      group: root
      mode: 0755
    with_items:
      - { file: "cloudctl" }

