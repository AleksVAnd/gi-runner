  - name: Add route for openldap
    shell:
      cmd: "oc expose service/openldap -n openldap"
    register: result
    failed_when: result.rc != 0 and "already exists" not in result.stderr
    when: ldap_depl_type == "C"

  - name: Get openldap route name
    shell:
      cmd: "oc get routes -n openldap -o json|jq .items[0].spec.host|tr -d '\"'"
    register: openldap_route
    when: ldap_depl_type == "C"

  - name: Encode Base64 ldap admin password
    shell:
      cmd: "echo -n {{ ldap_password }} | base64"
    register: ldap_password_base64

  - name: Login to ICS
    shell:
      cmd: "cloudctl login -a https://cp-console.apps.{{ domain }} --skip-ssl-validation -u admin -p '{{ ics_password }}' -n ibm-common-services"

  - name: Extract ICS Access Token
    shell:
      cmd: "cloudctl tokens|grep Access|awk -F ':' '{ print $2 }'|awk -F ' ' '{ print $2}'"
    register: access_token

  - name: Set LDAP URL for container
    set_fact:
      ldap_url: "{{ openldap_route.stdout }}:1389"
    when: ldap_depl_type == "C"

  - name: Set LDAP URL for standalone
    set_fact:
      ldap_url: "{{ bas_ip }}:389"
    when: ldap_depl_type == "S"

  - name: Create HA Proxy config file with openldap
    template:
      src: haproxy_with_ldap.j2
      dest: ../gi-temp/ldap_haproxy.cfg
    vars:
      masters: "{{ master_name|zip(master_ip)|list }}"
      nodes: "{{ worker_name|default([])+ocs_name|default([]) }}"
      ips: "{{ worker_ip|default([])+ocs_ip|default([]) }}"
      workers: "{{ nodes|zip(ips)|list }}"
    when: is_master_only == 'N' and ldap_depl_type == "C"

  - name: Create HA Proxy config file with ldap (no dedicated workers)
    template:
      src: haproxy_with_ldap_masters_only.j2
      dest: ../gi-temp/ldap_haproxy.cfg
    vars:
      masters: "{{ master_name|zip(master_ip)|list }}"
    when: is_master_only == 'Y' and ldap_depl_type == "C"

  - name: Update HA proxy config
    shell:
      cmd: cat ../gi-temp/ldap_haproxy.cfg >> /etc/haproxy/haproxy.cfg
    when: ldap_depl_type == "C"

  - name: Open openldap port on load balancer (bastion)
    firewalld:
      port: "1389/tcp"
      permanent: yes
      immediate: yes
      state: enabled

  - name: Restart HA Proxy
    service:
      name: haproxy
      state: restarted

  - name: Add OpenLDAP to ICS configuration for standalone
    uri:
      url: 'https://cp-console.apps.{{ domain }}/idmgmt/identity/api/v1/directory/ldap/onboardDirectory'
      method: POST
      body: "{\"LDAP_ID\": \"local_ldap\", \"LDAP_URL\": \"ldap://{{ ldap_url }}\", \"LDAP_BASEDN\": \"{{ ldap_domain }}\", \"LDAP_BINDDN\": \"cn=admin,{{ ldap_domain }}\", \"LDAP_BINDPASSWORD\": \"{{ ldap_password_base64.stdout }}\", \"LDAP_TYPE\": \"Custom\", \"LDAP_USERFILTER\": \"(&(uid=%v)(objectclass=inetOrgPerson))\", \"LDAP_GROUPFILTER\": \"\", \"LDAP_USERIDMAP\": \"*:uid\",\"LDAP_GROUPIDMAP\":\"\", \"LDAP_GROUPMEMBERIDMAP\": \"\"}"
      body_format: json
      headers:
        Authorization: 'bearer {{ access_token.stdout }}'
        Content-Type: 'application/json'
      validate_certs: no
      use_proxy: no
    environment:
      no_proxy: cp-console.apps.{{ domain }}
    when: ldap_depl_type == "S"

  - name: Add OpenLDAP to ICS configuration fo container
    uri:
      url: 'https://cp-console.apps.{{ domain }}/idmgmt/identity/api/v1/directory/ldap/onboardDirectory'
      method: POST
      body: "{\"LDAP_ID\": \"openldap\", \"LDAP_URL\": \"ldap://{{ ldap_url }}\", \"LDAP_BASEDN\": \"{{ ldap_domain }}\", \"LDAP_BINDDN\": \"cn=admin,{{ ldap_domain }}\", \"LDAP_BINDPASSWORD\": \"{{ ldap_password_base64.stdout }}\", \"LDAP_TYPE\": \"Custom\", \"LDAP_USERFILTER\": \"(&(uid=%v)(objectclass=inetOrgPerson))\", \"LDAP_GROUPFILTER\": \"\", \"LDAP_USERIDMAP\": \"*:uid\",\"LDAP_GROUPIDMAP\":\"\", \"LDAP_GROUPMEMBERIDMAP\": \"\"}"
      body_format: json
      headers:
        Authorization: 'bearer {{ access_token.stdout }}'
        Content-Type: 'application/json'
      validate_certs: no
      use_proxy: no
    environment:
      no_proxy: cp-console.apps.{{ domain }}
    when: ldap_depl_type == "C"

  - name: Installation summary
    vars:
      ldap_name: "{{ 'openldap' if ldap_depl_type == 'C' else 'local_ldap' }}"
    debug:
      msg:
        - "Open LDAP installed"
        - "LDAP instance configured in ICS - {{ ldap_name }}"

