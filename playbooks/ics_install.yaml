- name: Set parameters for air-gapped installation
  set_fact:
    offline_inventory: "{{ 'gi_arch' if install_gi == 'Y' else 'ics_arch' }}"
    ics_manifest: "{{ 'gi_offline/*' if install_gi == 'Y' else 'ics_offline/*' }}"
  when: internet_type == 'A'

- name: Create ICS operator namespace
  shell:
    cmd: "oc create namespace {{ ics_operator_namespace }} || echo 'Namespace exists'"
  ignore_errors: yes

- name: Label ICS nodes
  shell:
    cmd: "oc label node {{ item }}.{{ domain }} ics_role=yes --overwrite=true"
  with_items: "{{ ics_dedicated_nodes|list }}"
  when: ics_dedicated_nodes|length > 2

- name: Create ICS namespace with node selector
  shell:
    cmd: "{{ item }}"
  with_items:
    - oc create namespace ibm-common-services || echo "Namespace exists"
    - "oc patch namespace ibm-common-services -p '{\"metadata\":{\"annotations\": {\"scheduler.alpha.kubernetes.io/node-selector\": \"ics_role=yes\"}}}'"
  when: ics_dedicated_nodes|length > 2

- name: Check presence of cloudctl tool
  stat:
    path: "{{ temp_dir }}/{{ offline_inventory }}/{{ item.file }}"
  register: cloudctl_tool
  with_items:
    - { file: "cloudctl-linux-amd64.tar.gz" }
  ignore_errors: true

- name: Stop if cloudct tool is not uploaded for air-gapped installation
  fail:
    msg: "Please upload cloud tool to download directory"
  with_items: "{{ cloudctl_tool.results }}"
  when: item.stat.exists == False and internet_type == 'A'

- name: "Download cloud tool"
  get_url:
    url: "https://github.com/IBM/cloud-pak-cli/releases/latest/download/cloudctl-linux-amd64.tar.gz"
    dest: "{{ temp_dir }}/{{ offline_inventory }}"
    use_proxy: "{{ 'yes' if internet_type == 'P' else 'no' }}"
  when: internet_type != 'A'

- name: Unpack cloudctl tools
  shell:
    cmd: "tar xf {{ temp_dir }}/{{ offline_inventory }}/{{ item.src }} -C /usr/local/bin"
    warn: no
  with_items:
    - { src: "cloudctl-linux-amd64.tar.gz" }

- name: Standarize cloudctl name
  command: mv /usr/local/bin/cloudctl-linux-amd64 /usr/local/bin/cloudctl

- name: Set correct rights for RHCOS tools in /usr/local/bin
  file:
    path: "/usr/local/bin/{{ item.file }}"
    owner: root
    group: root
    mode: 0755
  with_items:
    - { file: "cloudctl" }

- name: Switch ICS inventory to portable registry
  shell:
    cmd: "cloudctl case launch --case {{ temp_dir }}/{{ offline_inventory }}/{{ ics_case }} --inventory {{ ics_case_inventory_setup }} --action configure-cluster-airgap --namespace {{ ics_operator_namespace }}  --args \"--registry registry.{{ domain }}:5000 --user {{ repo_user }} --pass {{ repo_user_password }} --inputDir {{ offline_inventory }}\""
  when: internet_type == 'A' and install_gi == 'N'

- name: Switch GI inventory to portable registry
  shell:
    cmd: "cloudctl case launch --case {{ offline_inventory }}/{{ gi_case }} --inventory {{ gi_case_inventory_setup }} --action configure-cluster-airgap --namespace {{ ics_operator_namespace }} --tolerance 1 --args \"--registry registry.{{ domain }}:5000 --user {{ repo_user }} --pass {{ repo_user_password }} --inputDir {{ offline_inventory }}\""
  when: internet_type == 'A' and install_gi == 'Y'

- name: Wait for cluster reconfiguration
  pause:
    minutes: 8
  when: internet_type == 'A'

