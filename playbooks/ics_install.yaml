- name: Set parameters for air-gapped installation
  set_fact:
    offline_inventory: "{{ 'gi_arch' if install_gi == 'Y' else 'ics_arch' }}"
    ics_manifest_dir: "{{ 'gi_offline' if install_gi == 'Y' else 'ics_offline' }}"
  when: internet_type == 'A'

- name: Create ICS operator namespace
  shell:
    cmd: "oc create namespace {{ ics_operator_namespace }} || echo 'Namespace exists'"
  ignore_errors: yes

- name: Label ICS nodes
  shell:
    cmd: "oc label node {{ item }}.{{ domain }} ics_role=yes --overwrite=true"
  with_items: "{{ ics_dedicated_nodes|list }}"
  when: ics_dedicated_nodes|length > 2

- name: Create ICS namespace with node selector
  shell:
    cmd: "{{ item }}"
  with_items:
    - oc create namespace ibm-common-services || echo "Namespace exists"
    - "oc patch namespace ibm-common-services -p '{\"metadata\":{\"annotations\": {\"scheduler.alpha.kubernetes.io/node-selector\": \"ics_role=yes\"}}}'"
  when: ics_dedicated_nodes|length > 2

- name: Check presence of cloudctl tool
  stat:
    path: "{{ temp_dir }}/{{ offline_inventory }}/{{ item.file }}"
  register: cloudctl_tool
  with_items:
    - { file: "cloudctl-linux-amd64.tar.gz" }
  ignore_errors: true

- name: Stop if cloudct tool is not uploaded for air-gapped installation
  fail:
    msg: "Please upload cloud tool to download directory"
  with_items: "{{ cloudctl_tool.results }}"
  when: item.stat.exists == False and internet_type == 'A'

- name: "Download cloud tool"
  get_url:
    url: "https://github.com/IBM/cloud-pak-cli/releases/latest/download/cloudctl-linux-amd64.tar.gz"
    dest: "{{ temp_dir }}/{{ offline_inventory }}"
    use_proxy: "{{ 'yes' if internet_type == 'P' else 'no' }}"
  when: internet_type != 'A'

- name: Unpack cloudctl tools
  shell:
    cmd: "tar xf {{ temp_dir }}/{{ offline_inventory }}/{{ item.src }} -C /usr/local/bin"
    warn: no
  with_items:
    - { src: "cloudctl-linux-amd64.tar.gz" }

- name: Standarize cloudctl name
  command: mv /usr/local/bin/cloudctl-linux-amd64 /usr/local/bin/cloudctl

- name: Set correct rights for RHCOS tools in /usr/local/bin
  file:
    path: "/usr/local/bin/{{ item.file }}"
    owner: root
    group: root
    mode: 0755
  with_items:
    - { file: "cloudctl" }

- name: Switch ICS inventory to portable registry
  shell:
    cmd: "cloudctl case launch --case {{ temp_dir }}/{{ offline_inventory }}/{{ ics_manifest_dir }}/{{ ics_case }} --inventory {{ ics_case_inventory_setup }} --action configure-cluster-airgap --namespace {{ ics_operator_namespace }}  --args \"--registry registry.{{ domain }}:5000 --user {{ repo_user }} --pass {{ repo_user_password }} --inputDir {{ temp_dir }}/{{ offline_inventory }}/{{ ics_manifest_dir }}\""
  when: internet_type == 'A' and install_gi == 'N'

- name: Switch GI inventory to portable registry
  shell:
    cmd: "cloudctl case launch --case {{ temp_dir }}/{{ offline_inventory }}/{{ ics_manifest_dir }}/{{ gi_case }} --inventory {{ gi_case_inventory_setup }} --action configure-cluster-airgap --namespace {{ ics_operator_namespace }} --tolerance 1 --args \"--registry registry.{{ domain }}:5000 --user {{ repo_user }} --pass {{ repo_user_password }} --inputDir {{ temp_dir }}/{{ offline_inventory }}/{{ ics_manifest_dir }}\""
  when: internet_type == 'A' and install_gi == 'Y'

- name: Wait for cluster reconfiguration
  pause:
    minutes: 8
  when: internet_type == 'A' and ocp_release|int < 2

- name: Check cluster nodes health after Content Source Policy change
  shell: ../scripts/check_cluster_health_operators.sh
  register: cluster_health_operators
  until: cluster_health_operators.stdout == "0"
  retries: 100
  delay: 30
  when: internet_type == 'A' and ocp_release|int < 2

- name: Wait for cluster operators after mirrored operator images setup (can take 20-40 minutes)
  shell:
    cmd: "oc get co --config=../ocp/auth/kubeconfig --no-headers|awk '{ print $3$4$5 }'|grep -v TrueFalseFalse|wc -l"
  register: co_status
  until: "co_status.stdout == \"0\""
  retries: 150
  delay: 30
  when: internet_type == 'A' and ocp_release|int < 2

- name: Create ICS catalog file
  template:
    src: ics_catalog.j2
    dest: "{{ temp_dir }}/ics_arch/ics_catalog.yaml"
  when: internet_type != 'A'

- name: Publish ICS catalog
  shell:
    cmd: "oc apply -f {{ temp_dir }}/ics_arch/ics_catalog.yaml"
  when: internet_type != 'A'

- name: Publish ICS catalog in air-gap
  shell:
    cmd: "cloudctl case launch --case {{ temp_dir }}/{{ offline_inventory }}/{{ ics_manifest_dir }}/{{ ics_case }}  --inventory {{ ics_case_inventory_setup }} --action install-catalog --namespace {{ ics_operator_namespace }}  --args \"--registry registry.{{ domain }}:5000\""
  when: internet_type == 'A'

- name: Wait for ICS catalog
  shell:
    cmd: "oc get pods -n openshift-marketplace|grep opencloud-operators|grep 1/1|grep Running|wc -l"
  register: ics_catalog_status
  until: "ics_catalog_status.stdout == \"1\""
  retries: 30
  delay: 10

- name: Wait for ICS catalog source
  shell:
    cmd: "oc get catalogsource -n openshift-marketplace|grep opencloud-operators|wc -l"
  register: ics_catalog_source_status
  until: "ics_catalog_source_status.stdout == \"1\""
  retries: 30
  delay: 10

- name: Subscribe ICS operator
  shell:
    cmd: "oc apply -f ../scripts/ics_subscription.yaml"

- name: Wait for ICS csv
  shell:
    cmd: "oc -n common-service get csv|grep ibm-common-service-operator|grep Succeeded|wc -l"
  register: ics_csv_status
  until: "ics_csv_status.stdout == \"1\""
  retries: 30
  delay: 10

- name: Wait for ICS crd's
  shell:
    cmd: "oc get crd | grep operandrequest|wc -l"
  register: ics_crd_status
  until: "ics_crd_status.stdout == \"1\""
  retries: 30
  delay: 10

- name: Set ICS deployment size
  shell:
    cmd: "oc patch commonservice common-service -n ibm-common-services --type=\"json\" -p='[{\"op\": \"replace\", \"path\": \"/spec/size\", \"value\": \"{{ ics_size }}\"}]'"

- name: Wait for deployment size change
  shell:
    cmd: "oc get commonservice common-service -n ibm-common-services -o json|jq -r .status.phase"
  register: ics_commonservice_status
  until: "ics_commonservice_status.stdout == \"Succeeded\""
  retries: 30
  delay: 10

