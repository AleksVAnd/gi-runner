- hosts: bastion
  vars:
    temp_dir: "../gi-temp"
    registry_version: "2.7.1"
    matchbox_version: "v0.9.0"
    internet_type:  "{{ lookup('env','GI_INTERNET_ACCESS') }}"
    domain:  "{{ lookup('env','GI_DOMAIN') }}"
    install_ldap:  "{{ lookup('env','GI_INSTALL_LDAP') }}"
    ssh_key:  "{{ lookup('env','GI_SSH_KEY') }}"
    bas_ip:  "{{ lookup('env','GI_BASTION_IP') }}"
    ntp_server:  "{{ lookup('env','GI_NTP_SRV') }}"
    ocp_release:  "{{ lookup('env','GI_OCP_RELEASE') }}"
    ocp_major_release: "{{ ocp_release.split('.')[:-1]|join('.') }}"
    ocp_minor_release: "{{ ocp_release.split('.')[-1] }}"
    boot_mac:  "{{ lookup('env','GI_BOOTSTRAP_MAC_ADDRESS') }}"
    is_master_only:  "{{ lookup('env','GI_MASTER_ONLY') }}"
    is_ocs_tainted:  "{{ lookup('env','GI_OCS_TAINTED') }}"
    boot_disk: "{{ lookup('env','GI_BOOT_DEVICE') }}"
    boot_ip:  "{{ lookup('env','GI_BOOTSTRAP_IP') }}"




  tasks:
    - name: Check standard configuration parameters
      fail: msg="Variable {{ item.name }} is not set"
      when: item.value == ""
      loop:
        - { name: "GI_INTERNET_ACCESS", value: "{{ internet_type }}" }
        - { name: "GI_DOMAIN", value: "{{ domain }}" }
        - { name: "GI_INSTALL_LDAP", value: "{{ install_ldap }}" }
        - { name: "GI_SSH_KEY", value: "{{ ssh_key }}" }
        - { name: "GI_BASTION_IP", value: "{{ bas_ip }}" }
        - { name: "GI_NTP_SRV", value: "{{ ntp_server }}" }
        - { name: "GI_OCP_RELEASE", value: "{{ ocp_release }}" }
        - { name: "GI_BOOTSTRAP_MAC_ADDRESS", value: "{{ boot_mac }}" }
        - { name: "GI_MASTER_ONLY", value: "{{ is_master_only }}" }
        - { name: "GI_OCS_TAINTED", value: "{{ is_ocs_tainted }}" }
        - { name: "GI_BOOT_DEVICE", value: "{{ boot_disk }}" }
        - { name: "GI_BOOTSTRAP_IP", value: "{{ boot_ip }}" }

    - name: Set parameters for air-gapped installation
      set_fact:
        archives_dir:  "{{ lookup('env','GI_ARCHIVES_DIR') }}"
        repo_user:  "{{ lookup('env','GI_REPO_USER') }}"
        repo_user_password:  "{{ lookup('env','GI_REPO_USER_PWD') }}"
      when: internet_type == 'A'

    - name: Check configuration parameters for air-gapped installation
      fail: msg="Variable {{ item.name }} is not set"
      when: internet_type == 'A' and item.value == ""
      loop:
        - { name: "GI_REPO_USER", value: "{{ repo_user }}" }
        - { name: "GI_REPO_USER_PWD", value: "{{ repo_user_password }}" }
        - { name: "GI_ARCHIVES_DIR", value: "{{ archives_dir }}" }

    - name: Set masters array
      set_fact:
        master_ip: "{{ lookup('env', 'GI_MASTER_IP').split(',') }}"
        master_mac: "{{ lookup('env', 'GI_MASTER_MAC_ADDRESS').split(',') }}"
        master_name: "{{ lookup('env', 'GI_MASTER_NAME').split(',') }}"

    - name: Check master configuration
      fail: msg="Variable {{ item.name }} is not set"
      when: item.value == ""
      loop:
        - { name: "GI_MASTER_IP", value: "{{ master_ip }}" }
        - { name: "GI_MASTER_MAC_ADDRESS", value: "{{ master_mac }}" }
        - { name: "GI_MASTER_NAME", value: "{{ master_name }}" }

          
    - name: Set OCS array
      set_fact:
        ocs_ip: "{{ lookup('env', 'GI_OCS_IP').split(',') }}"
        ocs_mac: "{{ lookup('env', 'GI_OCS_MAC_ADDRESS').split(',') }}"
        ocs_name: "{{ lookup('env', 'GI_OCS_NAME').split(',') }}"
      when: is_ocs_tainted == 'Y'

    - name: Check OCS configuration
      fail: msg="Variable {{ item.name }} is not set"
      when: is_ocs_tainted == 'Y' and item.value == ""
      loop:
        - { name: "GI_OCS_IP", value: "{{ ocs_ip }}" }
        - { name: "GI_OCS_MAC_ADDRESS", value: "{{ ocs_mac }}" }
        - { name: "GI_OCS_NAME", value: "{{ ocs_name }}" }

    - name: Set workers arrays
      set_fact:
        worker_ip: "{{ lookup('env', 'GI_WORKER_IP').split(',') }}"
        worker_mac: "{{ lookup('env', 'GI_WORKER_MAC_ADDRESS').split(',') }}"
        worker_name: "{{ lookup('env', 'GI_WORKER_NAME').split(',') }}"
      when: is_master_only == 'N'

    - name: Check workers configuration
      fail: msg="Variable {{ item.name }} is not set"
      when: is_master_only == 'N' and item.value == ""
      loop:
        - { name: "GI_WORKER_IP", value: "{{ worker_ip }}" }
        - { name: "GI_WORKER_MAC_ADDRESS", value: "{{ worker_mac }}" }
        - { name: "GI_WORKER_NAME", value: "{{ worker_name }}" }

    - name: Iterates all workers in one array
      vars:
        nodes: "{{ worker_name|default([])+ocs_name|default([]) }}"
        ips: "{{ worker_ip|default([])+ocs_ip|default([]) }}"

    - name: Setup bastion
      include: setup_bastion.yaml
