apiVersion: gi.ds.isc.ibm.com/v1
kind: GuardiumInsights
metadata:
  #name: This must be 10 or less characters
  name: {{ gi_namespace }}
spec:
  version: 3.0.0
  license:
    accept: true
    licenseType: "L-OOLE-C2ASKR"
  guardiumInsightsGlobal:
    dev: "true"
    licenseAccept: true
    # Guardium Insights template size can be defined as below using the size parameter
    size: {{ gi_deployment_size }}
    #image:
      #insightsPullSecret needs to be set to the following developer/QA workflow
      #insightsPullSecret: ibm-artifactory-key
      #repository needs to be set to the following developer/QA workflow
      #repository: sec-guardium-next-gen-docker-local.artifactory.swg-devops.com
    insights:
      ingress:
        #hostName: Change this, ex: staging.apps.gi-devops-ocp46-41.cp.fyre.ibm.com
        hostName: insights.apps.{{ domain }}
        #domainName:  Change this
        domainName: apps.{{ domain }}
      ics:
        namespace: ibm-common-services
        registry: common-service
    #storageClassName: Change this to a ReadWriteMany StorageClass!!!
    storageClassName: "{{ storage_class_block }}"
  dependency-db2:
    #image:
      #insightsPullSecret needs to be set to the following developer/QA workflow
      #insightsPullSecret: ibm-entitlement-key
    db2:
      size: 1
      storage:
      - name: meta
        spec:
          storageClassName: "{{ storage_class_fs }}"
        type: create
      - name: data
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: "{{ gi_ds_size }}Gi"
        type: template
    mln:
      distribution: 0:0
      total: 1
  dependency-mongodb:
    storage:
      - metadata:
          name: data-volume
      - metadata:
          name: logs-volume
        spec:
          storageClassName: "{{ storage_class_fs }}"
  mini-snif:
    persistentVolumesClaims:
      mini-snif-shared:
        storageClassName: "{{ storage_class_fs }}"
  universal-connector-manager:
    persistentVolumesClaims:
      universal-connector-manager-shared:
        storageClassName: "{{ storage_class_fs }}"
  settings-datasources:
    persistentVolumesClaims:
      settings-datasources:
        storageClassName: "{{ storage_class_fs }}"
  ticketing:
    persistentVolumesClaims:
      ticketing-keystore:
        storageClassName: "{{ storage_class_fs }}"
  dependency-redis:
    size: 3
